package Kaja.sandbox.sandbox;

/*Generated by MPS */

import JavaKaja.runtime.KajaFrame;
import JavaKaja.runtime.Direction;
import JavaKaja.runtime.Vehicle;
import JavaKaja.runtime.Position;
import JavaKaja.runtime.Orientation;

public class Test extends KajaFrame {
  public Test() {
  }
  protected void perform() {
    buildRoad_from_library_TestRoad_routine();
    // check if starting position is allowed. 
    // check if destination position is allowed. 
    // if so, then create vehicle and add vehicle to cell at starting position 
    if (isAllowedRow(4) && isAllowedCol(4) && isAllowedRow(4) && isAllowedCol(12)) {
      // check if vehicle is drivable here 
      if (world[4][4].isDrivable(Direction.east)) {
        // create a new vehicle 
        Vehicle vehicle = new Vehicle(new Position(4, 4), new Position(4, 12), Direction.east, Direction.south, Direction.east);

        addVehicle(4, 4, vehicle);
        // place vehcile in this starting position 

      }
    }
    int steps = 0;
    while (steps < 10) {
      tick();
    }
    trace("Completed Simulation");
    stop();
  }
  public void buildRoad_from_library_TestRoad_routine() {
    if (isAllowedRow(4) && isAllowedCol(4)) {

      if (Orientation.horizontal == Orientation.vertical) {
        // first check if it is possible to create a road vertically 
        if (isAllowedRow(14) && isAllowedCol(4)) {
          // addRoad(row, column, direction) iterating over the columns 
          for (int i = 0; i < 10; i++) {
            addRoad(4 + i, 4, Direction.east);
          }
        } else {
          reportError("Length exceeds the environment bounds. Vertical");
        }
      } else {
        // first check if it is possible to create a road horizontally 
        if (isAllowedRow(4) && isAllowedCol(14)) {
          // addRoad(row, coloum, direction) iterating over the rows 
          for (int i = 0; i < 10; i++) {
            addRoad(4, 4 + i, Direction.east);
          }
        } else {
          reportError("Length exceeds the environment bounds. Horizontal");
        }
      }
      minipause();
    } else {
      reportError("Attempted to build road outside of the environment!");
    }
    if (isAllowedRow(4) && isAllowedCol(8)) {

      if (Orientation.vertical == Orientation.vertical) {
        // first check if it is possible to create a road vertically 
        if (isAllowedRow(14) && isAllowedCol(8)) {
          // addRoad(row, column, direction) iterating over the columns 
          for (int i = 0; i < 10; i++) {
            addRoad(4 + i, 8, Direction.south);
          }
        } else {
          reportError("Length exceeds the environment bounds. Vertical");
        }
      } else {
        // first check if it is possible to create a road horizontally 
        if (isAllowedRow(4) && isAllowedCol(18)) {
          // addRoad(row, coloum, direction) iterating over the rows 
          for (int i = 0; i < 10; i++) {
            addRoad(4, 8 + i, Direction.south);
          }
        } else {
          reportError("Length exceeds the environment bounds. Horizontal");
        }
      }
      minipause();
    } else {
      reportError("Attempted to build road outside of the environment!");
    }
    if (isAllowedRow(12) && isAllowedCol(8)) {

      if (Orientation.horizontal == Orientation.vertical) {
        // first check if it is possible to create a road vertically 
        if (isAllowedRow(24) && isAllowedCol(8)) {
          // addRoad(row, column, direction) iterating over the columns 
          for (int i = 0; i < 12; i++) {
            addRoad(12 + i, 8, Direction.east);
          }
        } else {
          reportError("Length exceeds the environment bounds. Vertical");
        }
      } else {
        // first check if it is possible to create a road horizontally 
        if (isAllowedRow(12) && isAllowedCol(20)) {
          // addRoad(row, coloum, direction) iterating over the rows 
          for (int i = 0; i < 12; i++) {
            addRoad(12, 8 + i, Direction.east);
          }
        } else {
          reportError("Length exceeds the environment bounds. Horizontal");
        }
      }
      minipause();
    } else {
      reportError("Attempted to build road outside of the environment!");
    }
  }
  public static void main(String[] args) {
    Test script = new Test();
    script.initializeComponents();
    script.run();
  }
}
